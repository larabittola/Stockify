# Stockify - Gestor de Inventario Inteligente üöÄ

Stockify es una aplicaci√≥n web full-stack dise√±ada para simplificar y centralizar la gesti√≥n de inventario para PyMEs y emprendedores, transformando datos en decisiones estrat√©gicas.

![Stockify Screenshot](https://i.imgur.com/k2e4BAn.png)
*(Consejo: Reemplaz√° el enlace de la imagen de arriba con una captura de pantalla de tu propia aplicaci√≥n. Pod√©s arrastrar y soltar una imagen directamente en el editor de GitHub para subirla).*

---

## üìã Tabla de Contenidos

1.  [Acerca del Proyecto](#acerca-del-proyecto-)
2.  [Funcionalidades Clave](#funcionalidades-clave-)
3.  [Tecnolog√≠as Utilizadas](#tecnolog√≠as-utilizadas-)
4.  [C√≥mo Empezar (Instalaci√≥n)](#c√≥mo-empezar-instalaci√≥n-)
5.  [Uso de la Aplicaci√≥n](#uso-de-la-aplicaci√≥n-)
6.  [Mejoras Futuras](#mejoras-futuras-)
7.  [Licencia](#licencia-)
8.  [Contacto](#contacto-)

---

## üéØ Acerca del Proyecto

Este proyecto nace para resolver un problema com√∫n en peque√±os y medianos negocios: la falta de una herramienta sencilla y centralizada para gestionar el inventario. Una mala gesti√≥n del stock puede llevar a p√©rdidas significativas, ya sea por exceso de productos (costos de almacenamiento, obsolescencia) o por quiebre de stock (p√©rdida de ventas, clientes insatisfechos).

**Stockify** ataca este problema ofreciendo una plataforma web intuitiva donde los usuarios pueden:
* Controlar sus productos y proveedores.
* Visualizar m√©tricas importantes en un dashboard.
* Analizar datos de ventas hist√≥ricos para tomar decisiones de compra m√°s inteligentes.

Todo esto a trav√©s de una interfaz de p√°gina √∫nica (SPA) r√°pida y fluida, dise√±ada para ser accesible sin necesidad de conocimientos t√©cnicos previos.

---

## ‚ú® Funcionalidades Clave

* **Dashboard Principal:** Vista r√°pida de m√©tricas clave como valor total del inventario, cantidad de productos y alertas de bajo stock.
* **Gesti√≥n de Productos:** Sistema CRUD (Crear, Leer, Actualizar, Borrar) completo para los productos del inventario.
* **Gesti√≥n de Proveedores:** M√≥dulo CRUD para registrar y administrar la informaci√≥n de los proveedores.
* **M√≥dulo de Notas:** Un espacio simple para crear, editar y eliminar notas r√°pidas o recordatorios.
* **An√°lisis Interactivo de Mercado:**
    * Visualizaci√≥n de gr√°ficos din√°micos generados con Chart.js.
    * Filtro para seleccionar el tipo de an√°lisis (Evoluci√≥n de ventas, por categor√≠a, etc.).
    * Filtro por a√±o para explorar tendencias en per√≠odos espec√≠ficos.
* **Navegaci√≥n Fluida:** Experiencia de Aplicaci√≥n de P√°gina √önica (SPA) que no requiere recargar la p√°gina para cambiar de secci√≥n.

---

## üíª Tecnolog√≠as Utilizadas

Este proyecto fue construido utilizando un stack full-stack moderno:

**Frontend (Lo que ve el usuario):**
* HTML5
* CSS3
* JavaScript (Vanilla JS, ES6 Modules)
* [Tailwind CSS](https://tailwindcss.com/) - Para el dise√±o y estilos.
* [Chart.js](https://www.chartjs.org/) - Para la visualizaci√≥n de datos.
* [Lucide Icons](https://lucide.dev/) - Para la iconograf√≠a.

**Backend (La l√≥gica del servidor):**
* **Python 3**
* **Flask** - Micro-framework para construir la API REST.
* **Base de Datos:** SQLite

**Arquitectura:**
* Aplicaci√≥n de P√°gina √önica (SPA) con arquitectura Cliente-Servidor.
* Comunicaci√≥n v√≠a API REST.

---

## üöÄ C√≥mo Empezar (Instalaci√≥n)

Para correr este proyecto en tu m√°quina local, segu√≠ estos simples pasos.

### Prerrequisitos
Asegurate de tener instalado Python 3.
* [Descargar Python](https://www.python.org/downloads/)

### Instalaci√≥n

1.  **Clon√° el repositorio**
    ```sh
    git clone [https://github.com/tu_usuario/tu_repositorio.git](https://github.com/tu_usuario/tu_repositorio.git)
    ```
2.  **Naveg√° a la carpeta del proyecto**
    ```sh
    cd tu_repositorio
    ```
3.  **Cre√° y activ√° un entorno virtual (recomendado)**
    ```sh
    python -m venv venv
    # En Windows:
    venv\Scripts\activate
    # En MacOS/Linux:
    source venv/bin/activate
    ```
4.  **Instal√° las dependencias de Python**
    ```sh
    pip install -r requirements.txt
    ```
    *(Nota: Si no ten√©s un archivo `requirements.txt`, pod√©s crearlo con `pip freeze > requirements.txt` despu√©s de instalar flask y flask-cors con `pip install flask flask-cors`)*

5.  **Ejecut√° la aplicaci√≥n**
    ```sh
    python app.py
    ```
    El servidor se iniciar√° y estar√° escuchando en `http://127.0.0.1:5000`. La base de datos `inventario.db` se crear√° autom√°ticamente la primera vez que ejecutes la aplicaci√≥n.

---

## üìñ Uso de la Aplicaci√≥n

Una vez que el servidor est√© corriendo, simplemente abr√≠ tu navegador y and√° a la siguiente direcci√≥n:

`http://127.0.0.1:5000`

Desde ah√≠, podr√°s navegar por todas las secciones de la aplicaci√≥n.

---

## üîÆ Mejoras Futuras

El proyecto tiene un gran potencial para crecer. Algunas de las funcionalidades planeadas son:

* **Desarrollo de M√≥dulos Faltantes:** Activar y construir las secciones de "Gastos" y "Facturaci√≥n".
* **Notificaciones Avanzadas:** Alertas por email para notificar sobre bajo stock.
* **Exportaci√≥n de Datos:** Funcionalidad para exportar listas de productos o reportes a PDF o CSV.

---

## üìú Licencia

Distribuido bajo la Licencia MIT. Ver `LICENSE.txt` para m√°s informaci√≥n.

---

## üë§ Contacto

[Tu Nombre] - [tu_email@ejemplo.com](mailto:tu_email@ejemplo.com)

Link del Proyecto: [https://github.com/tu_usuario/tu_repositorio](https://github.com/tu_usuario/tu_repositorio)
